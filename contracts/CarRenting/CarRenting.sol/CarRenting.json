{
  "abi": [
    {
      "type": "constructor",
      "inputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addCar",
      "inputs": [
        {
          "name": "car",
          "type": "tuple",
          "internalType": "struct CarRenting.Car",
          "components": [
            {
              "name": "hp",
              "type": "uint16",
              "internalType": "uint16"
            },
            {
              "name": "fuelLevel",
              "type": "uint16",
              "internalType": "uint16"
            },
            {
              "name": "isRented",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "rentedTo",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "rentCar",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "rents",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "hp",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "fuelLevel",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "isRented",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "rentedTo",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    }
  ],
  "bytecode": {
    "object": "0x6080604052348015600e575f5ffd5b5061032f8061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80634f1d221f146100435780639fdc8f051461009a578063c70676451461011e575b5f5ffd5b61009861005136600461024a565b335f90815260208181526040909120825181549390920151640100000000600160c81b031961ffff918216620100000263ffffffff19909516919093161792909217169055565b005b6100e86100a83660046102d9565b5f6020819052908152604090205461ffff8082169162010000810490911690640100000000810460ff16906501000000000090046001600160a01b031684565b6040805161ffff9586168152939094166020840152901515828401526001600160a01b0316606082015290519081900360800190f35b61009861012c3660046102d9565b6001600160a01b0381165f9081526020819052604090208054640100000000900460ff16156101975760405162461bcd60e51b815260206004820152601260248201527110d85c88185b1c9958591e481c995b9d195960721b60448201526064015b60405180910390fd5b805461ffff16158015906101b55750805462010000900461ffff1615155b6101f65760405162461bcd60e51b815260206004820152601260248201527110d85c88191bd95cc81b9bdd08195e1a5cdd60721b604482015260640161018e565b8054650100000000003302640100000000600160c81b03199091161764010000000017905550565b803561ffff8116811461022f575f5ffd5b919050565b80356001600160a01b038116811461022f575f5ffd5b5f608082840312801561025b575f5ffd5b506040516080810167ffffffffffffffff8111828210171561028b57634e487b7160e01b5f52604160045260245ffd5b6040526102978361021e565b81526102a56020840161021e565b6020820152604083013580151581146102bc575f5ffd5b60408201526102cd60608401610234565b60608201529392505050565b5f602082840312156102e9575f5ffd5b6102f282610234565b939250505056fea26469706673582212203202b0649349b07120088f9e282bc0fa86d2255293d02c6c331b4b3d5d55f9da64736f6c634300081c0033",
    "sourceMap": "535:754:0:-:0;;;723:17;;;;;;;;;;535:754;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80634f1d221f146100435780639fdc8f051461009a578063c70676451461011e575b5f5ffd5b61009861005136600461024a565b335f90815260208181526040909120825181549390920151640100000000600160c81b031961ffff918216620100000263ffffffff19909516919093161792909217169055565b005b6100e86100a83660046102d9565b5f6020819052908152604090205461ffff8082169162010000810490911690640100000000810460ff16906501000000000090046001600160a01b031684565b6040805161ffff9586168152939094166020840152901515828401526001600160a01b0316606082015290519081900360800190f35b61009861012c3660046102d9565b6001600160a01b0381165f9081526020819052604090208054640100000000900460ff16156101975760405162461bcd60e51b815260206004820152601260248201527110d85c88185b1c9958591e481c995b9d195960721b60448201526064015b60405180910390fd5b805461ffff16158015906101b55750805462010000900461ffff1615155b6101f65760405162461bcd60e51b815260206004820152601260248201527110d85c88191bd95cc81b9bdd08195e1a5cdd60721b604482015260640161018e565b8054650100000000003302640100000000600160c81b03199091161764010000000017905550565b803561ffff8116811461022f575f5ffd5b919050565b80356001600160a01b038116811461022f575f5ffd5b5f608082840312801561025b575f5ffd5b506040516080810167ffffffffffffffff8111828210171561028b57634e487b7160e01b5f52604160045260245ffd5b6040526102978361021e565b81526102a56020840161021e565b6020820152604083013580151581146102bc575f5ffd5b60408201526102cd60608401610234565b60608201529392505050565b5f602082840312156102e9575f5ffd5b6102f282610234565b939250505056fea26469706673582212203202b0649349b07120088f9e282bc0fa86d2255293d02c6c331b4b3d5d55f9da64736f6c634300081c0033",
    "sourceMap": "535:754:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;746:246;;;;;;:::i;:::-;824:10;797:18;818:17;;;;;;;;;;;866:6;;854:18;;901:13;;;;;-1:-1:-1;;;;;;854:18:0;882:32;;;;;-1:-1:-1;;882:32:0;;;854:18;;;;882:32;;;;;957:28;;;746:246;;;679:37;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;679:37:0;;;;;;;1700:6:1;1688:19;;;1670:38;;1744:19;;;;1739:2;1724:18;;1717:47;1807:14;;1800:22;1780:18;;;1773:50;-1:-1:-1;;;;;1859:32:1;1854:2;1839:18;;1832:60;679:37:0;;;;;;1657:3:1;679:37:0;;;998:288;;;;;;:::i;:::-;-1:-1:-1;;;;;1067:12:0;;1049:15;1067:12;;;;;;;;;;1104;;;;;;;1103:13;1094:45;;;;-1:-1:-1;;;1094:45:0;;2105:2:1;1094:45:0;;;2087:21:1;2144:2;2124:18;;;2117:30;-1:-1:-1;;;2163:18:1;;;2156:48;2221:18;;1094:45:0;;;;;;;;;1158:6;;;;:11;;;;:33;;-1:-1:-1;1173:13:0;;;;;;;:18;;1158:33;1149:65;;;;-1:-1:-1;;;1149:65:0;;2452:2:1;1149:65:0;;;2434:21:1;2491:2;2471:18;;;2464:30;-1:-1:-1;;;2510:18:1;;;2503:48;2568:18;;1149:65:0;2250:342:1;1149:65:0;1225:19;;1254:25;1269:10;1254:25;-1:-1:-1;;;;;;1254:25:0;;;;1225:19;1254:25;;;-1:-1:-1;998:288:0:o;14:159:1:-;81:20;;141:6;130:18;;120:29;;110:57;;163:1;160;153:12;110:57;14:159;;;:::o;178:173::-;246:20;;-1:-1:-1;;;;;295:31:1;;285:42;;275:70;;341:1;338;331:12;356:897;434:6;494:3;482:9;473:7;469:23;465:33;510:2;507:22;;;525:1;522;515:12;507:22;-1:-1:-1;574:2:1;568:9;616:3;604:16;;650:18;635:34;;671:22;;;632:62;629:185;;;736:10;731:3;727:20;724:1;717:31;771:4;768:1;761:15;799:4;796:1;789:15;629:185;830:2;823:22;869:28;887:9;869:28;:::i;:::-;861:6;854:44;931:37;964:2;953:9;949:18;931:37;:::i;:::-;926:2;914:15;;907:62;1038:2;1023:18;;1010:32;1078:13;;1071:21;1061:32;;1051:60;;1107:1;1104;1097:12;1051:60;1139:2;1127:15;;1120:30;1183:38;1217:2;1202:18;;1183:38;:::i;:::-;1178:2;1166:15;;1159:63;1170:6;356:897;-1:-1:-1;;;356:897:1:o;1258:186::-;1317:6;1370:2;1358:9;1349:7;1345:23;1341:32;1338:52;;;1386:1;1383;1376:12;1338:52;1409:29;1428:9;1409:29;:::i;:::-;1399:39;1258:186;-1:-1:-1;;;1258:186:1:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addCar((uint16,uint16,bool,address))": "4f1d221f",
    "rentCar(address)": "c7067645",
    "rents(address)": "9fdc8f05"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"hp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"fuelLevel\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isRented\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"rentedTo\",\"type\":\"address\"}],\"internalType\":\"struct CarRenting.Car\",\"name\":\"car\",\"type\":\"tuple\"}],\"name\":\"addCar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"rentCar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rents\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"hp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"fuelLevel\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isRented\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"rentedTo\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Expected operations to perform: 1) Deploy a CarRenting contract 2) add 2 cars, with two different owners. Keep in mind that an owner is equivalent to an EOA wallet, so you need to create two different wallets. 3) create another EOA wallet, and rent the second car 4) create another EOA wallet, and try to rent again the second car.  The transaction should revert since it is already rented. 5) print the informations about the second car into the console.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CarRenting.sol\":\"CarRenting\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/CarRenting.sol\":{\"keccak256\":\"0x6440472343c3a91867876d622a13e45022cc254463e6f67d464aa2518940a1c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b98dbd1d831811cfa49392d246f193a06d31e9a5ef5727e96ac5c2ae81cd521d\",\"dweb:/ipfs/QmaNyysJkk67o7uydUSWyfV6eVUXgtCkuf98rruWYGndUe\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "struct CarRenting.Car",
              "name": "car",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint16",
                  "name": "hp",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "fuelLevel",
                  "type": "uint16"
                },
                {
                  "internalType": "bool",
                  "name": "isRented",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "rentedTo",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addCar"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rentCar"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rents",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "hp",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "fuelLevel",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isRented",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "rentedTo",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/CarRenting.sol": "CarRenting"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "src/CarRenting.sol": {
        "keccak256": "0x6440472343c3a91867876d622a13e45022cc254463e6f67d464aa2518940a1c1",
        "urls": [
          "bzz-raw://b98dbd1d831811cfa49392d246f193a06d31e9a5ef5727e96ac5c2ae81cd521d",
          "dweb:/ipfs/QmaNyysJkk67o7uydUSWyfV6eVUXgtCkuf98rruWYGndUe"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 0
}
